{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\alsue\\\\Programming\\\\Mobile\\\\project_pharm\\\\src\\\\screens\\\\ScanQRcode.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styled from \"styled-components/native\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport ResetButton from \"../components/ResetButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DrugInformationAction } from \"../actions/DrugInformationAction\";\nimport OverlayView from \"../components/OverlayView\";\nimport { EditPharmData, EditPharmName } from \"../util\";\nvar Container = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  justify-content: flex-end;\\n  align-items: center;\\n  background-color: \", \";\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.background;\n});\n\nfunction timestamp() {\n  var Now = new Date();\n  Now.setHours(Now.getHours() + 9);\n  return Now.toISOString().replace(\"T\", \" \").substring(0, 19);\n}\n\nfunction ScanQRcode(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var width = Dimensions.get(\"window\").width;\n  var dispatch = useDispatch();\n  var vibration = useSelector(function (state) {\n    return state.settingInfo.vibration;\n  });\n\n  function CheckDrugAlert(item) {\n    console.log(\"########################################## \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n    Alert.alert(\"복용 약물이 아래 내용이 맞습니까?\", \"\\uBCF5\\uC57D \\uC2DC\\uAC04: \" + timestamp() + \"\\n      \\uC758\\uC57D\\uD488\\uBA85: \" + item + \"\\n      \", [{\n      text: \"아니요\",\n      onPress: function onPress() {\n        console.log(\"Cancel Pressed\"), setScanned(false);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"네\",\n      onPress: function onPress() {\n        console.log(\"OK Pressed\"), navigation.navigate(\"TakingPharmData\"), setScanned(false);\n      }\n    }]);\n  }\n\n  var SearchDrugByBarCode = function SearchDrugByBarCode(editedData) {\n    return _regeneratorRuntime.async(function SearchDrugByBarCode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Vibration.vibrate(vibration ? 200 : 0);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"http://apis.data.go.kr/1471057/MdcinPrductPrmisnInfoService1/getMdcinPrductItem?serviceKey=4ARJOwbLh8jufyYInZFDNEp0phIdsR0d7ZZP0bqJKwTfQ3cL%2BDf7zJWkSnYAk%2B8%2BjCjn%2FV9RLSxZ2vNFQ%2BYHrQ%3D%3D&bar_code=\" + editedData + \"&type=json\").then(function (response) {\n              return response.json();\n            }).then(function (myJson) {\n              var name = EditPharmName(myJson.body.items[0].ITEM_NAME);\n              var howToStore = myJson.body.items[0].STORAGE_METHOD;\n              var howMuch = EditPharmData(myJson.body.items[0].UD_DOC_DATA, \"[CDATA[\", \"]\");\n              var mainIngredient = myJson.body.items[0].MAIN_ITEM_INGR;\n              var time = Date.now().toString();\n              dispatch(DrugInformationAction(name, howToStore, howMuch, mainIngredient, time));\n              return CheckDrugAlert(name);\n            }));\n\n          case 4:\n            _context.next = 10;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0.message);\n            Alert.alert(\"스캔 오류!\", \"\\uC758\\uC57D\\uD488\\uC774 \\uC544\\uB2C8\\uAC70\\uB098 \\uAD6D\\uB0B4\\uC5D0\\uC11C \\uD310\\uB9E4\\uB418\\uB294 \\uC758\\uC57D\\uD488\\uC774 \\uC544\\uB2D9\\uB2C8\\uB2E4.\\n\\uCE74\\uBA54\\uB77C\\uAC00 \\uD754\\uB4E4\\uB9B4\\uC2DC \\uC798\\uBABB \\uC778\\uC2DD \\uD560 \\uC218 \\uC788\\uC73C\\uBBC0\\uB85C \\uB2E4\\uC2DC \\uC2A4\\uCE94\\uD558\\uC138\\uC694.\", [{\n              text: \"다시 스캔하기\",\n              onPress: function onPress() {\n                setScanned(false);\n              }\n            }]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context2.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref3) {\n    var type = _ref3.type,\n        data = _ref3.data;\n    var index = data.indexOf(\"8806\");\n    var editedData = data.substring(index, index + 13);\n    setScanned(true);\n    SearchDrugByBarCode(editedData);\n    console.log(\"### \" + type + \" \\n\" + editedData + \" ###\");\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 12\n      }\n    }, \"\\uCE74\\uBA54\\uB77C \\uAD8C\\uD55C \\uC694\\uCCAD\\uC911\\uC785\\uB2C8\\uB2E4...\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: {\n      width: width - 40,\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), React.createElement(OverlayView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), scanned && React.createElement(ResetButton, {\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    title: \"\\uB2E4\\uC2DC\\uC2A4\\uCE94\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default ScanQRcode;","map":{"version":3,"sources":["C:/Users/alsue/Programming/Mobile/project_pharm/src/screens/ScanQRcode.js"],"names":["React","useState","useEffect","styled","BarCodeScanner","ResetButton","useDispatch","useSelector","DrugInformationAction","OverlayView","EditPharmData","EditPharmName","Container","SafeAreaView","theme","background","timestamp","Now","Date","setHours","getHours","toISOString","replace","substring","ScanQRcode","navigation","hasPermission","setHasPermission","scanned","setScanned","width","Dimensions","get","dispatch","vibration","state","settingInfo","CheckDrugAlert","item","console","log","Alert","alert","text","onPress","style","navigate","SearchDrugByBarCode","editedData","Vibration","vibrate","fetch","then","response","json","myJson","name","body","items","ITEM_NAME","howToStore","STORAGE_METHOD","howMuch","UD_DOC_DATA","mainIngredient","MAIN_ITEM_INGR","time","now","toString","message","requestPermissionsAsync","status","handleBarCodeScanned","type","data","index","indexOf","undefined","justifyContent","alignItems","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, Alert, Vibration, Dimensions } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\n\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DrugInformationAction } from \"../actions/DrugInformationAction\";\r\nimport OverlayView from \"../components/OverlayView\";\r\nimport { EditPharmData, EditPharmName } from \"../util\";\r\n\r\nconst Container = styled.SafeAreaView`\r\n  flex: 1;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.background};\r\n`;\r\n\r\nfunction timestamp() {\r\n  var Now = new Date();\r\n  Now.setHours(Now.getHours() + 9);\r\n  return Now.toISOString().replace(\"T\", \" \").substring(0, 19);\r\n}\r\n\r\n///function Starts\r\nfunction ScanQRcode({ navigation }) {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const width = Dimensions.get(\"window\").width;\r\n  const dispatch = useDispatch();\r\n\r\n  // vibration redux\r\n  const vibration = useSelector((state) => {\r\n    return state.settingInfo.vibration;\r\n  });\r\n\r\n  // check drug alert function\r\n  function CheckDrugAlert(item) {\r\n    console.log(\r\n      \"########################################## \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\r\n    );\r\n    Alert.alert(\r\n      \"복용 약물이 아래 내용이 맞습니까?\",\r\n      `복약 시간: ${timestamp()}\r\n      의약품명: ${item}\r\n      `,\r\n      [\r\n        {\r\n          text: \"아니요\",\r\n          onPress: () => {\r\n            console.log(\"Cancel Pressed\"), setScanned(false);\r\n          },\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"네\",\r\n          onPress: () => {\r\n            console.log(\"OK Pressed\"),\r\n              navigation.navigate(\"TakingPharmData\"),\r\n              setScanned(false);\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  }\r\n\r\n  // search barcode function\r\n  const SearchDrugByBarCode = async (editedData) => {\r\n    Vibration.vibrate(vibration ? 200 : 0);\r\n\r\n    try {\r\n      await fetch(\r\n        `http://apis.data.go.kr/1471057/MdcinPrductPrmisnInfoService1/getMdcinPrductItem?serviceKey=4ARJOwbLh8jufyYInZFDNEp0phIdsR0d7ZZP0bqJKwTfQ3cL%2BDf7zJWkSnYAk%2B8%2BjCjn%2FV9RLSxZ2vNFQ%2BYHrQ%3D%3D&bar_code=${editedData}&type=json`\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((myJson) => {\r\n          const name = EditPharmName(myJson.body.items[0].ITEM_NAME);\r\n          const howToStore = myJson.body.items[0].STORAGE_METHOD;\r\n          const howMuch = EditPharmData(\r\n            myJson.body.items[0].UD_DOC_DATA,\r\n            \"[CDATA[\",\r\n            \"]\"\r\n          );\r\n          const mainIngredient = myJson.body.items[0].MAIN_ITEM_INGR;\r\n          const time = Date.now().toString();\r\n\r\n          dispatch(\r\n            DrugInformationAction(\r\n              name,\r\n              howToStore,\r\n              howMuch,\r\n              mainIngredient,\r\n              time\r\n            )\r\n          );\r\n\r\n          return CheckDrugAlert(name);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      Alert.alert(\r\n        \"스캔 오류!\",\r\n        `의약품이 아니거나 국내에서 판매되는 의약품이 아닙니다.\\n카메라가 흔들릴시 잘못 인식 할 수 있으므로 다시 스캔하세요.`,\r\n        [\r\n          {\r\n            text: \"다시 스캔하기\",\r\n            onPress: () => {\r\n              setScanned(false);\r\n            },\r\n          },\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === \"granted\");\r\n    })();\r\n  }, []);\r\n\r\n  ///scan data function\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    const index = data.indexOf(\"8806\");\r\n    const editedData = data.substring(index, index + 13);\r\n    setScanned(true);\r\n    SearchDrugByBarCode(editedData);\r\n    console.log(`### ${type} \\n${editedData} ###`);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>카메라 권한 요청중입니다...</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  /// Rendering Start\r\n  return (\r\n    <Container>\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={{\r\n          width: width - 40,\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n          flex: 1,\r\n        }}\r\n      />\r\n      <OverlayView />\r\n      {scanned && (\r\n        <ResetButton onPress={() => setScanned(false)} title=\"다시스캔\" />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ScanQRcode;\r\n\r\n// json url\r\n// http://apis.data.go.kr/1471057/MdcinPrductPrmisnInfoService1/getMdcinPrductItem?serviceKey=4ARJOwbLh8jufyYInZFDNEp0phIdsR0d7ZZP0bqJKwTfQ3cL%2BDf7zJWkSnYAk%2B8%2BjCjn%2FV9RLSxZ2vNFQ%2BYHrQ%3D%3D&bar_code=8806469007237&type=json\r\n\r\n// xml url\r\n// http://apis.data.go.kr/1471057/MdcinPrductPrmisnInfoService1/getMdcinPrductItem?serviceKey=4ARJOwbLh8jufyYInZFDNEp0phIdsR0d7ZZP0bqJKwTfQ3cL%2BDf7zJWkSnYAk%2B8%2BjCjn%2FV9RLSxZ2vNFQ%2BYHrQ%3D%3D&bar_code=8806469007237&type=xml\r\n"]},"metadata":{},"sourceType":"module"}