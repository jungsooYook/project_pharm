{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _jsxFileName = \"C:\\\\Users\\\\alsue\\\\Programming\\\\Mobile\\\\project_pharm\\\\src\\\\components\\\\ScanVibrationButton.js\";\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components/native\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { DarkModeAction } from \"../actions/DarkModeAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dark, light } from \"../theme\";\nimport { ScanVibrationAction } from \"../actions\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  padding: 10px 0;\\n  padding-left: 10px;\\n\"])));\nvar SwitchContainer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  flex-direction: row-reverse\\n  align-items: center;\\n  justify-content: flex-start;\\n  \"])));\nvar Content = styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-size: 20px;\\n  align-self: flex-start;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.text;\n});\n\nfunction ScanVibrationButton(_ref2) {\n  var content = _ref2.content;\n  var dispatch = useDispatch();\n\n  function toggleSwitch() {\n    dispatch(ScanVibrationAction());\n    console.log(\"darkmoe: \" + darkmode);\n  }\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      vibration: state.settingInfo.vibration,\n      darkmode: state.settingInfo.darkmode\n    };\n  }),\n      vibration = _useSelector.vibration,\n      darkmode = _useSelector.darkmode;\n\n  var theme = darkmode ? dark : light;\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, content), React.createElement(SwitchContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Switch, {\n    trackColor: {\n      false: theme.toggleBarUnactivated,\n      true: theme.toggleBarActivated\n    },\n    thumbColor: theme.toggle,\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: vibration,\n    style: {\n      marginLeft: 4,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ScanVibrationButton;\nScanVibrationButton.defaultprops = {\n  isEnabled: false\n};","map":{"version":3,"sources":["C:/Users/alsue/Programming/Mobile/project_pharm/src/components/ScanVibrationButton.js"],"names":["React","useState","styled","DarkModeAction","useDispatch","useSelector","dark","light","ScanVibrationAction","Container","View","SwitchContainer","Content","Text","theme","text","ScanVibrationButton","content","dispatch","toggleSwitch","console","log","darkmode","state","vibration","settingInfo","false","toggleBarUnactivated","true","toggleBarActivated","toggle","marginLeft","alignItems","defaultprops","isEnabled"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,SAASC,cAAT;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf;AACA,SAASC,mBAAT;AAEA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,IAAV,+IAAf;AAMA,IAAMC,eAAe,GAAGT,MAAM,CAACQ,IAAV,mLAArB;AAOA,IAAME,OAAO,GAAGV,MAAM,CAACW,IAAV,8IACF;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,IAArB;AAAA,CADE,CAAb;;AAOA,SAASC,mBAAT,QAA0C;AAAA,MAAXC,OAAW,SAAXA,OAAW;AACxC,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,WAASe,YAAT,GAAwB;AACtBD,IAAAA,QAAQ,CAACV,mBAAmB,EAApB,CAAR;AACAY,IAAAA,OAAO,CAACC,GAAR,eAAwBC,QAAxB;AACD;;AAGD,qBAAgCjB,WAAW,CAAC,UAACkB,KAAD,EAAW;AACrD,WAAO;AACLC,MAAAA,SAAS,EAAED,KAAK,CAACE,WAAN,CAAkBD,SADxB;AAELF,MAAAA,QAAQ,EAAEC,KAAK,CAACE,WAAN,CAAkBH;AAFvB,KAAP;AAID,GAL0C,CAA3C;AAAA,MAAQE,SAAR,gBAAQA,SAAR;AAAA,MAAmBF,QAAnB,gBAAmBA,QAAnB;;AAOA,MAAMR,KAAK,GAAGQ,QAAQ,GAAGhB,IAAH,GAAUC,KAAhC;AAGA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUU,OAAV,CADF,EAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AACVS,MAAAA,KAAK,EAAEZ,KAAK,CAACa,oBADH;AAEVC,MAAAA,IAAI,EAAEd,KAAK,CAACe;AAFF,KADd;AAKE,IAAA,UAAU,EAAEf,KAAK,CAACgB,MALpB;AAME,IAAA,mBAAmB,EAAC,SANtB;AAOE,IAAA,aAAa,EAAEX,YAPjB;AAQE,IAAA,KAAK,EAAEK,SART;AASE,IAAA,KAAK,EAAE;AACLO,MAAAA,UAAU,EAAE,CADP;AAELC,MAAAA,UAAU,EAAE;AAFP,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAqBD;;AAED,eAAehB,mBAAf;AAEAA,mBAAmB,CAACiB,YAApB,GAAmC;AACjCC,EAAAA,SAAS,EAAE;AADsB,CAAnC","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { Switch } from \"react-native\";\r\nimport { DarkModeAction } from \"../actions/DarkModeAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dark, light } from \"../theme\";\r\nimport { ScanVibrationAction } from \"../actions\";\r\n\r\nconst Container = styled.View`\r\n  flex-direction: row;\r\n  padding: 10px 0;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst SwitchContainer = styled.View`\r\n  flex: 1;\r\n  flex-direction: row-reverse\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  `;\r\n\r\nconst Content = styled.Text`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 20px;\r\n  align-self: flex-start;\r\n`;\r\n\r\n/// function start\r\nfunction ScanVibrationButton({ content }) {\r\n  const dispatch = useDispatch();\r\n\r\n  function toggleSwitch() {\r\n    dispatch(ScanVibrationAction());\r\n    console.log(`darkmoe: ${darkmode}`);\r\n  }\r\n\r\n  // darkmode redux\r\n  const { vibration, darkmode } = useSelector((state) => {\r\n    return {\r\n      vibration: state.settingInfo.vibration,\r\n      darkmode: state.settingInfo.darkmode,\r\n    };\r\n  });\r\n\r\n  const theme = darkmode ? dark : light;\r\n\r\n  ///rendering start\r\n  return (\r\n    <Container>\r\n      <Content>{content}</Content>\r\n      <SwitchContainer>\r\n        <Switch\r\n          trackColor={{\r\n            false: theme.toggleBarUnactivated,\r\n            true: theme.toggleBarActivated,\r\n          }}\r\n          thumbColor={theme.toggle}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={toggleSwitch}\r\n          value={vibration}\r\n          style={{\r\n            marginLeft: 4,\r\n            alignItems: \"center\",\r\n          }}\r\n        />\r\n      </SwitchContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ScanVibrationButton;\r\n\r\nScanVibrationButton.defaultprops = {\r\n  isEnabled: false,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}